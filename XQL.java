// Generated from XQL.g4 by ANTLR 4.0
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class XQL extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		HTMS=1, HTME=2, SLH=3, HOFL=4, HCFL=5, HWS=6, HID=7, INHTM=8, HEQ=9, HLIT=10, 
		IF=11, ELSE=12, THEN=13, FOR=14, IN=15, DCL=16, FN=17, AS=18, PATH=19, 
		DPATH=20, ORDER=21, BY=22, AT=23, WHERE=24, RETURN=25, LET=26, AND=27, 
		GT=28, GE=29, LT=30, LE=31, EQ=32, NE=33, LEQ=34, CL=35, OB=36, CB=37, 
		ATT=38, OFL=39, CFL=40, CMA=41, QM=42, PL=43, MN=44, ML=45, SBO=46, SBC=47, 
		DIV=48, OR=49, MOD=50, DSH=51, LIT=52, CT=53, DOC=54, DC=55, VR=56, ID=57, 
		INT=58, WS=59, COMMENT=60;
	public static final int QRY = 1;
	public static String[] modeNames = {
		"DEFAULT_MODE", "QRY"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"HTMS", "HTME", "SLH", "HOFL", "HCFL", "HWS", "HID", "INHTM", "'='", "HLIT", 
		"'if'", "'else'", "'then'", "'for'", "'in'", "'declare'", "'function'", 
		"AS", "'/'", "'//'", "'order'", "'by'", "'at'", "'where'", "'return'", 
		"'let'", "'and'", "GT", "GE", "LT", "LE", "EQ", "NE", "':='", "':'", "'('", 
		"')'", "'@'", "OFL", "CFL", "','", "'?'", "'+'", "'-'", "'*'", "'['", 
		"']'", "'div'", "'or'", "'mod'", "'|'", "LIT", "'\"'", "DOC", "'doc'", 
		"'$'", "ID", "INT", "WS", "COMMENT"
	};
	public static final String[] ruleNames = {
		"HTMS", "HTME", "SLH", "HOFL", "HCFL", "HWS", "HID", "INHTM", "HEQ", "HLIT", 
		"IF", "ELSE", "THEN", "FOR", "IN", "DCL", "FN", "AS", "PATH", "DPATH", 
		"ORDER", "BY", "AT", "WHERE", "RETURN", "LET", "AND", "GT", "GE", "LT", 
		"LE", "EQ", "NE", "LEQ", "CL", "OB", "CB", "ATT", "OFL", "CFL", "CMA", 
		"QM", "PL", "MN", "ML", "SBO", "SBC", "DIV", "OR", "MOD", "DSH", "LIT", 
		"CT", "DOC", "DC", "VR", "ID", "INT", "WS", "COMMENT"
	};


		int OBCount = 0;


	public XQL(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "XQL.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 3: HOFL_action((RuleContext)_localctx, actionIndex); break;

		case 5: HWS_action((RuleContext)_localctx, actionIndex); break;

		case 38: OFL_action((RuleContext)_localctx, actionIndex); break;

		case 39: CFL_action((RuleContext)_localctx, actionIndex); break;

		case 58: WS_action((RuleContext)_localctx, actionIndex); break;

		case 59: COMMENT_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void OFL_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 1: OBCount++; break;
		}
	}
	private void WS_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 4: skip();  break;
		}
	}
	private void CFL_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 2: OBCount--; if(OBCount<0) popMode(); break;
		}
	}
	private void HWS_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 3: skip();  break;
		}
	}
	private void COMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 5: skip();  break;
		}
	}
	private void HOFL_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: pushMode(QRY); break;
		}
	}

	public static final String _serializedATN =
		"\2\4>\u018c\b\1\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4"+
		"\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4"+
		"\20\t\20\4\21\t\21\4\22\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4"+
		"\27\t\27\4\30\t\30\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4"+
		"\36\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'"+
		"\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4"+
		"\62\t\62\4\63\t\63\4\64\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t"+
		"9\4:\t:\4;\t;\4<\t<\4=\t=\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\5\3\6\3\6"+
		"\3\7\6\7\u0089\n\7\r\7\16\7\u008a\3\7\3\7\3\b\3\b\7\b\u0091\n\b\f\b\16"+
		"\b\u0094\13\b\3\t\6\t\u0097\n\t\r\t\16\t\u0098\3\n\3\n\3\13\3\13\7\13"+
		"\u009f\n\13\f\13\16\13\u00a2\13\13\3\13\3\13\3\f\3\f\3\f\3\r\3\r\3\r\3"+
		"\r\3\r\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\21"+
		"\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\22"+
		"\3\22\3\22\3\23\3\23\3\23\3\23\5\23\u00cf\n\23\3\24\3\24\3\25\3\25\3\25"+
		"\3\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\30\3\30\3\30\3\31\3\31"+
		"\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33"+
		"\3\33\3\34\3\34\3\34\3\34\3\35\3\35\3\35\5\35\u00fa\n\35\3\36\3\36\3\36"+
		"\3\36\5\36\u0100\n\36\3\37\3\37\3\37\5\37\u0105\n\37\3 \3 \3 \3 \5 \u010b"+
		"\n \3!\3!\3!\5!\u0110\n!\3\"\3\"\3\"\3\"\5\"\u0116\n\"\3#\3#\3#\3$\3$"+
		"\3%\3%\3&\3&\3\'\3\'\3(\3(\3(\3)\3)\3)\3*\3*\3+\3+\3,\3,\3-\3-\3.\3.\3"+
		"/\3/\3\60\3\60\3\61\3\61\3\61\3\61\3\62\3\62\3\62\3\63\3\63\3\63\3\63"+
		"\3\64\3\64\3\65\3\65\7\65\u0146\n\65\f\65\16\65\u0149\13\65\3\65\3\65"+
		"\3\66\3\66\3\67\3\67\3\67\3\67\3\67\3\67\3\67\7\67\u0156\n\67\f\67\16"+
		"\67\u0159\13\67\3\67\3\67\3\67\38\38\38\38\39\39\3:\3:\7:\u0166\n:\f:"+
		"\16:\u0169\13:\3;\6;\u016c\n;\r;\16;\u016d\3;\3;\6;\u0172\n;\r;\16;\u0173"+
		"\5;\u0176\n;\3<\6<\u0179\n<\r<\16<\u017a\3<\3<\3=\3=\3=\3=\7=\u0183\n"+
		"=\f=\16=\u0186\13=\3=\3=\3=\3=\3=\6\u00a0\u0147\u0157\u0184>\4\3\1\6\4"+
		"\1\b\5\1\n\6\2\f\7\1\16\b\5\20\t\1\22\n\1\24\13\1\26\f\1\30\r\1\32\16"+
		"\1\34\17\1\36\20\1 \21\1\"\22\1$\23\1&\24\1(\25\1*\26\1,\27\1.\30\1\60"+
		"\31\1\62\32\1\64\33\1\66\34\18\35\1:\36\1<\37\1> \1@!\1B\"\1D#\1F$\1H"+
		"%\1J&\1L\'\1N(\1P)\3R*\4T+\1V,\1X-\1Z.\1\\/\1^\60\1`\61\1b\62\1d\63\1"+
		"f\64\1h\65\1j\66\1l\67\1n8\1p9\1r:\1t;\1v<\1x=\6z>\7\4\2\3\16\4))>>\4"+
		"))@@\4))\61\61\5\13\f\17\17\"\"\4C\\c|\6\62;C\\aac|\4\62^zz\4C\\c|\6\62"+
		";C\\aac|\3\62;\3\62;\5\13\f\17\17\"\"\u019e\2\4\3\2\2\2\2\6\3\2\2\2\2"+
		"\b\3\2\2\2\2\n\3\2\2\2\2\f\3\2\2\2\2\16\3\2\2\2\2\20\3\2\2\2\2\22\3\2"+
		"\2\2\2\24\3\2\2\2\2\26\3\2\2\2\3\30\3\2\2\2\3\32\3\2\2\2\3\34\3\2\2\2"+
		"\3\36\3\2\2\2\3 \3\2\2\2\3\"\3\2\2\2\3$\3\2\2\2\3&\3\2\2\2\3(\3\2\2\2"+
		"\3*\3\2\2\2\3,\3\2\2\2\3.\3\2\2\2\3\60\3\2\2\2\3\62\3\2\2\2\3\64\3\2\2"+
		"\2\3\66\3\2\2\2\38\3\2\2\2\3:\3\2\2\2\3<\3\2\2\2\3>\3\2\2\2\3@\3\2\2\2"+
		"\3B\3\2\2\2\3D\3\2\2\2\3F\3\2\2\2\3H\3\2\2\2\3J\3\2\2\2\3L\3\2\2\2\3N"+
		"\3\2\2\2\3P\3\2\2\2\3R\3\2\2\2\3T\3\2\2\2\3V\3\2\2\2\3X\3\2\2\2\3Z\3\2"+
		"\2\2\3\\\3\2\2\2\3^\3\2\2\2\3`\3\2\2\2\3b\3\2\2\2\3d\3\2\2\2\3f\3\2\2"+
		"\2\3h\3\2\2\2\3j\3\2\2\2\3l\3\2\2\2\3n\3\2\2\2\3p\3\2\2\2\3r\3\2\2\2\3"+
		"t\3\2\2\2\3v\3\2\2\2\3x\3\2\2\2\3z\3\2\2\2\4|\3\2\2\2\6~\3\2\2\2\b\u0080"+
		"\3\2\2\2\n\u0082\3\2\2\2\f\u0085\3\2\2\2\16\u0088\3\2\2\2\20\u008e\3\2"+
		"\2\2\22\u0096\3\2\2\2\24\u009a\3\2\2\2\26\u009c\3\2\2\2\30\u00a5\3\2\2"+
		"\2\32\u00a8\3\2\2\2\34\u00ad\3\2\2\2\36\u00b2\3\2\2\2 \u00b6\3\2\2\2\""+
		"\u00b9\3\2\2\2$\u00c1\3\2\2\2&\u00ce\3\2\2\2(\u00d0\3\2\2\2*\u00d2\3\2"+
		"\2\2,\u00d5\3\2\2\2.\u00db\3\2\2\2\60\u00de\3\2\2\2\62\u00e1\3\2\2\2\64"+
		"\u00e7\3\2\2\2\66\u00ee\3\2\2\28\u00f2\3\2\2\2:\u00f9\3\2\2\2<\u00ff\3"+
		"\2\2\2>\u0104\3\2\2\2@\u010a\3\2\2\2B\u010f\3\2\2\2D\u0115\3\2\2\2F\u0117"+
		"\3\2\2\2H\u011a\3\2\2\2J\u011c\3\2\2\2L\u011e\3\2\2\2N\u0120\3\2\2\2P"+
		"\u0122\3\2\2\2R\u0125\3\2\2\2T\u0128\3\2\2\2V\u012a\3\2\2\2X\u012c\3\2"+
		"\2\2Z\u012e\3\2\2\2\\\u0130\3\2\2\2^\u0132\3\2\2\2`\u0134\3\2\2\2b\u0136"+
		"\3\2\2\2d\u013a\3\2\2\2f\u013d\3\2\2\2h\u0141\3\2\2\2j\u0143\3\2\2\2l"+
		"\u014c\3\2\2\2n\u014e\3\2\2\2p\u015d\3\2\2\2r\u0161\3\2\2\2t\u0163\3\2"+
		"\2\2v\u016b\3\2\2\2x\u0178\3\2\2\2z\u017e\3\2\2\2|}\t\2\2\2}\5\3\2\2\2"+
		"~\177\t\3\2\2\177\7\3\2\2\2\u0080\u0081\t\4\2\2\u0081\t\3\2\2\2\u0082"+
		"\u0083\7}\2\2\u0083\u0084\b\5\2\2\u0084\13\3\2\2\2\u0085\u0086\7\177\2"+
		"\2\u0086\r\3\2\2\2\u0087\u0089\t\5\2\2\u0088\u0087\3\2\2\2\u0089\u008a"+
		"\3\2\2\2\u008a\u0088\3\2\2\2\u008a\u008b\3\2\2\2\u008b\u008c\3\2\2\2\u008c"+
		"\u008d\b\7\5\2\u008d\17\3\2\2\2\u008e\u0092\t\6\2\2\u008f\u0091\t\7\2"+
		"\2\u0090\u008f\3\2\2\2\u0091\u0094\3\2\2\2\u0092\u0090\3\2\2\2\u0092\u0093"+
		"\3\2\2\2\u0093\21\3\2\2\2\u0094\u0092\3\2\2\2\u0095\u0097\t\b\2\2\u0096"+
		"\u0095\3\2\2\2\u0097\u0098\3\2\2\2\u0098\u0096\3\2\2\2\u0098\u0099\3\2"+
		"\2\2\u0099\23\3\2\2\2\u009a\u009b\7?\2\2\u009b\25\3\2\2\2\u009c\u00a0"+
		"\7$\2\2\u009d\u009f\13\2\2\2\u009e\u009d\3\2\2\2\u009f\u00a2\3\2\2\2\u00a0"+
		"\u00a1\3\2\2\2\u00a0\u009e\3\2\2\2\u00a1\u00a3\3\2\2\2\u00a2\u00a0\3\2"+
		"\2\2\u00a3\u00a4\7$\2\2\u00a4\27\3\2\2\2\u00a5\u00a6\7k\2\2\u00a6\u00a7"+
		"\7h\2\2\u00a7\31\3\2\2\2\u00a8\u00a9\7g\2\2\u00a9\u00aa\7n\2\2\u00aa\u00ab"+
		"\7u\2\2\u00ab\u00ac\7g\2\2\u00ac\33\3\2\2\2\u00ad\u00ae\7v\2\2\u00ae\u00af"+
		"\7j\2\2\u00af\u00b0\7g\2\2\u00b0\u00b1\7p\2\2\u00b1\35\3\2\2\2\u00b2\u00b3"+
		"\7h\2\2\u00b3\u00b4\7q\2\2\u00b4\u00b5\7t\2\2\u00b5\37\3\2\2\2\u00b6\u00b7"+
		"\7k\2\2\u00b7\u00b8\7p\2\2\u00b8!\3\2\2\2\u00b9\u00ba\7f\2\2\u00ba\u00bb"+
		"\7g\2\2\u00bb\u00bc\7e\2\2\u00bc\u00bd\7n\2\2\u00bd\u00be\7c\2\2\u00be"+
		"\u00bf\7t\2\2\u00bf\u00c0\7g\2\2\u00c0#\3\2\2\2\u00c1\u00c2\7h\2\2\u00c2"+
		"\u00c3\7w\2\2\u00c3\u00c4\7p\2\2\u00c4\u00c5\7e\2\2\u00c5\u00c6\7v\2\2"+
		"\u00c6\u00c7\7k\2\2\u00c7\u00c8\7q\2\2\u00c8\u00c9\7p\2\2\u00c9%\3\2\2"+
		"\2\u00ca\u00cb\7c\2\2\u00cb\u00cf\7u\2\2\u00cc\u00cd\7C\2\2\u00cd\u00cf"+
		"\7U\2\2\u00ce\u00ca\3\2\2\2\u00ce\u00cc\3\2\2\2\u00cf\'\3\2\2\2\u00d0"+
		"\u00d1\7\61\2\2\u00d1)\3\2\2\2\u00d2\u00d3\7\61\2\2\u00d3\u00d4\7\61\2"+
		"\2\u00d4+\3\2\2\2\u00d5\u00d6\7q\2\2\u00d6\u00d7\7t\2\2\u00d7\u00d8\7"+
		"f\2\2\u00d8\u00d9\7g\2\2\u00d9\u00da\7t\2\2\u00da-\3\2\2\2\u00db\u00dc"+
		"\7d\2\2\u00dc\u00dd\7{\2\2\u00dd/\3\2\2\2\u00de\u00df\7c\2\2\u00df\u00e0"+
		"\7v\2\2\u00e0\61\3\2\2\2\u00e1\u00e2\7y\2\2\u00e2\u00e3\7j\2\2\u00e3\u00e4"+
		"\7g\2\2\u00e4\u00e5\7t\2\2\u00e5\u00e6\7g\2\2\u00e6\63\3\2\2\2\u00e7\u00e8"+
		"\7t\2\2\u00e8\u00e9\7g\2\2\u00e9\u00ea\7v\2\2\u00ea\u00eb\7w\2\2\u00eb"+
		"\u00ec\7t\2\2\u00ec\u00ed\7p\2\2\u00ed\65\3\2\2\2\u00ee\u00ef\7n\2\2\u00ef"+
		"\u00f0\7g\2\2\u00f0\u00f1\7v\2\2\u00f1\67\3\2\2\2\u00f2\u00f3\7c\2\2\u00f3"+
		"\u00f4\7p\2\2\u00f4\u00f5\7f\2\2\u00f59\3\2\2\2\u00f6\u00fa\7@\2\2\u00f7"+
		"\u00f8\7i\2\2\u00f8\u00fa\7v\2\2\u00f9\u00f6\3\2\2\2\u00f9\u00f7\3\2\2"+
		"\2\u00fa;\3\2\2\2\u00fb\u00fc\7@\2\2\u00fc\u0100\7?\2\2\u00fd\u00fe\7"+
		"i\2\2\u00fe\u0100\7g\2\2\u00ff\u00fb\3\2\2\2\u00ff\u00fd\3\2\2\2\u0100"+
		"=\3\2\2\2\u0101\u0105\7>\2\2\u0102\u0103\7n\2\2\u0103\u0105\7v\2\2\u0104"+
		"\u0101\3\2\2\2\u0104\u0102\3\2\2\2\u0105?\3\2\2\2\u0106\u0107\7>\2\2\u0107"+
		"\u010b\7?\2\2\u0108\u0109\7n\2\2\u0109\u010b\7g\2\2\u010a\u0106\3\2\2"+
		"\2\u010a\u0108\3\2\2\2\u010bA\3\2\2\2\u010c\u0110\7?\2\2\u010d\u010e\7"+
		"g\2\2\u010e\u0110\7s\2\2\u010f\u010c\3\2\2\2\u010f\u010d\3\2\2\2\u0110"+
		"C\3\2\2\2\u0111\u0112\7#\2\2\u0112\u0116\7?\2\2\u0113\u0114\7p\2\2\u0114"+
		"\u0116\7g\2\2\u0115\u0111\3\2\2\2\u0115\u0113\3\2\2\2\u0116E\3\2\2\2\u0117"+
		"\u0118\7<\2\2\u0118\u0119\7?\2\2\u0119G\3\2\2\2\u011a\u011b\7<\2\2\u011b"+
		"I\3\2\2\2\u011c\u011d\7*\2\2\u011dK\3\2\2\2\u011e\u011f\7+\2\2\u011fM"+
		"\3\2\2\2\u0120\u0121\7B\2\2\u0121O\3\2\2\2\u0122\u0123\7}\2\2\u0123\u0124"+
		"\b(\3\2\u0124Q\3\2\2\2\u0125\u0126\7\177\2\2\u0126\u0127\b)\4\2\u0127"+
		"S\3\2\2\2\u0128\u0129\7.\2\2\u0129U\3\2\2\2\u012a\u012b\7A\2\2\u012bW"+
		"\3\2\2\2\u012c\u012d\7-\2\2\u012dY\3\2\2\2\u012e\u012f\7/\2\2\u012f[\3"+
		"\2\2\2\u0130\u0131\7,\2\2\u0131]\3\2\2\2\u0132\u0133\7]\2\2\u0133_\3\2"+
		"\2\2\u0134\u0135\7_\2\2\u0135a\3\2\2\2\u0136\u0137\7f\2\2\u0137\u0138"+
		"\7k\2\2\u0138\u0139\7x\2\2\u0139c\3\2\2\2\u013a\u013b\7q\2\2\u013b\u013c"+
		"\7t\2\2\u013ce\3\2\2\2\u013d\u013e\7o\2\2\u013e\u013f\7q\2\2\u013f\u0140"+
		"\7f\2\2\u0140g\3\2\2\2\u0141\u0142\7~\2\2\u0142i\3\2\2\2\u0143\u0147\7"+
		"$\2\2\u0144\u0146\13\2\2\2\u0145\u0144\3\2\2\2\u0146\u0149\3\2\2\2\u0147"+
		"\u0148\3\2\2\2\u0147\u0145\3\2\2\2\u0148\u014a\3\2\2\2\u0149\u0147\3\2"+
		"\2\2\u014a\u014b\7$\2\2\u014bk\3\2\2\2\u014c\u014d\7$\2\2\u014dm\3\2\2"+
		"\2\u014e\u014f\5p8\2\u014f\u0150\7*\2\2\u0150\u0151\7$\2\2\u0151\u0152"+
		"\3\2\2\2\u0152\u0157\5t:\2\u0153\u0156\5t:\2\u0154\u0156\7\60\2\2\u0155"+
		"\u0153\3\2\2\2\u0155\u0154\3\2\2\2\u0156\u0159\3\2\2\2\u0157\u0158\3\2"+
		"\2\2\u0157\u0155\3\2\2\2\u0158\u015a\3\2\2\2\u0159\u0157\3\2\2\2\u015a"+
		"\u015b\7$\2\2\u015b\u015c\7+\2\2\u015co\3\2\2\2\u015d\u015e\7f\2\2\u015e"+
		"\u015f\7q\2\2\u015f\u0160\7e\2\2\u0160q\3\2\2\2\u0161\u0162\7&\2\2\u0162"+
		"s\3\2\2\2\u0163\u0167\t\t\2\2\u0164\u0166\t\n\2\2\u0165\u0164\3\2\2\2"+
		"\u0166\u0169\3\2\2\2\u0167\u0165\3\2\2\2\u0167\u0168\3\2\2\2\u0168u\3"+
		"\2\2\2\u0169\u0167\3\2\2\2\u016a\u016c\t\13\2\2\u016b\u016a\3\2\2\2\u016c"+
		"\u016d\3\2\2\2\u016d\u016b\3\2\2\2\u016d\u016e\3\2\2\2\u016e\u0175\3\2"+
		"\2\2\u016f\u0171\7\60\2\2\u0170\u0172\t\f\2\2\u0171\u0170\3\2\2\2\u0172"+
		"\u0173\3\2\2\2\u0173\u0171\3\2\2\2\u0173\u0174\3\2\2\2\u0174\u0176\3\2"+
		"\2\2\u0175\u016f\3\2\2\2\u0175\u0176\3\2\2\2\u0176w\3\2\2\2\u0177\u0179"+
		"\t\r\2\2\u0178\u0177\3\2\2\2\u0179\u017a\3\2\2\2\u017a\u0178\3\2\2\2\u017a"+
		"\u017b\3\2\2\2\u017b\u017c\3\2\2\2\u017c\u017d\b<\6\2\u017dy\3\2\2\2\u017e"+
		"\u017f\7\61\2\2\u017f\u0180\7,\2\2\u0180\u0184\3\2\2\2\u0181\u0183\13"+
		"\2\2\2\u0182\u0181\3\2\2\2\u0183\u0186\3\2\2\2\u0184\u0185\3\2\2\2\u0184"+
		"\u0182\3\2\2\2\u0185\u0187\3\2\2\2\u0186\u0184\3\2\2\2\u0187\u0188\7,"+
		"\2\2\u0188\u0189\7\61\2\2\u0189\u018a\3\2\2\2\u018a\u018b\b=\7\2\u018b"+
		"{\3\2\2\2\30\2\3\u008a\u0092\u0098\u00a0\u00ce\u00f9\u00ff\u0104\u010a"+
		"\u010f\u0115\u0147\u0155\u0157\u0167\u016d\u0173\u0175\u017a\u0184";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
	}
}