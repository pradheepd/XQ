// Generated from XQL.g4 by ANTLR 4.0
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class XQL extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		HTMS=1, HTME=2, SLH=3, HOFL=4, HCFL=5, HWS=6, HID=7, INHTM=8, HEQ=9, HLIT=10, 
		IF=11, ELSE=12, THEN=13, FOR=14, IN=15, DCL=16, FN=17, AS=18, PATH=19, 
		DPATH=20, ORDER=21, BY=22, AT=23, WHERE=24, RETURN=25, LET=26, AND=27, 
		GT=28, GE=29, LT=30, LE=31, EQ=32, NE=33, LEQ=34, CL=35, OB=36, CB=37, 
		ATT=38, OFL=39, CFL=40, CMA=41, QM=42, PL=43, MN=44, ML=45, DIV=46, OR=47, 
		MOD=48, DSH=49, LIT=50, CT=51, DOC=52, DC=53, VR=54, ID=55, INT=56, WS=57, 
		COMMENT=58;
	public static final int QRY = 1;
	public static String[] modeNames = {
		"DEFAULT_MODE", "QRY"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"HTMS", "HTME", "SLH", "HOFL", "HCFL", "HWS", "HID", "INHTM", "'='", "HLIT", 
		"'if'", "'else'", "'then'", "'for'", "'in'", "'declare'", "'function'", 
		"AS", "'/'", "'//'", "'order'", "'by'", "'at'", "'where'", "'return'", 
		"'let'", "'and'", "GT", "GE", "LT", "LE", "EQ", "NE", "':='", "':'", "'('", 
		"')'", "'@'", "OFL", "CFL", "','", "'?'", "'+'", "'-'", "'*'", "'div'", 
		"'or'", "'mod'", "'|'", "LIT", "'\"'", "DOC", "'doc'", "'$'", "ID", "INT", 
		"WS", "COMMENT"
	};
	public static final String[] ruleNames = {
		"HTMS", "HTME", "SLH", "HOFL", "HCFL", "HWS", "HID", "INHTM", "HEQ", "HLIT", 
		"IF", "ELSE", "THEN", "FOR", "IN", "DCL", "FN", "AS", "PATH", "DPATH", 
		"ORDER", "BY", "AT", "WHERE", "RETURN", "LET", "AND", "GT", "GE", "LT", 
		"LE", "EQ", "NE", "LEQ", "CL", "OB", "CB", "ATT", "OFL", "CFL", "CMA", 
		"QM", "PL", "MN", "ML", "DIV", "OR", "MOD", "DSH", "LIT", "CT", "DOC", 
		"DC", "VR", "ID", "INT", "WS", "COMMENT"
	};


		int OBCount = 0;


	public XQL(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "XQL.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 3: HOFL_action((RuleContext)_localctx, actionIndex); break;

		case 5: HWS_action((RuleContext)_localctx, actionIndex); break;

		case 38: OFL_action((RuleContext)_localctx, actionIndex); break;

		case 39: CFL_action((RuleContext)_localctx, actionIndex); break;

		case 56: WS_action((RuleContext)_localctx, actionIndex); break;

		case 57: COMMENT_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void OFL_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 1: OBCount++; break;
		}
	}
	private void WS_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 4: skip();  break;
		}
	}
	private void CFL_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 2: OBCount--; if(OBCount<0) popMode(); break;
		}
	}
	private void HWS_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 3: skip();  break;
		}
	}
	private void COMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 5: skip();  break;
		}
	}
	private void HOFL_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: pushMode(QRY); break;
		}
	}

	public static final String _serializedATN =
		"\2\4<\u0184\b\1\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4"+
		"\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4"+
		"\20\t\20\4\21\t\21\4\22\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4"+
		"\27\t\27\4\30\t\30\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4"+
		"\36\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'"+
		"\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4"+
		"\62\t\62\4\63\t\63\4\64\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t"+
		"9\4:\t:\4;\t;\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\5\3\6\3\6\3\7\6\7\u0085"+
		"\n\7\r\7\16\7\u0086\3\7\3\7\3\b\3\b\7\b\u008d\n\b\f\b\16\b\u0090\13\b"+
		"\3\t\6\t\u0093\n\t\r\t\16\t\u0094\3\n\3\n\3\13\3\13\7\13\u009b\n\13\f"+
		"\13\16\13\u009e\13\13\3\13\3\13\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\16\3"+
		"\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\21\3\21\3\21\3"+
		"\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3"+
		"\23\3\23\3\23\3\23\5\23\u00cb\n\23\3\24\3\24\3\25\3\25\3\25\3\26\3\26"+
		"\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\30\3\30\3\30\3\31\3\31\3\31\3\31"+
		"\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\34"+
		"\3\34\3\34\3\34\3\35\3\35\3\35\5\35\u00f6\n\35\3\36\3\36\3\36\3\36\5\36"+
		"\u00fc\n\36\3\37\3\37\3\37\5\37\u0101\n\37\3 \3 \3 \3 \5 \u0107\n \3!"+
		"\3!\3!\5!\u010c\n!\3\"\3\"\3\"\3\"\5\"\u0112\n\"\3#\3#\3#\3$\3$\3%\3%"+
		"\3&\3&\3\'\3\'\3(\3(\3(\3)\3)\3)\3*\3*\3+\3+\3,\3,\3-\3-\3.\3.\3/\3/\3"+
		"/\3/\3\60\3\60\3\60\3\61\3\61\3\61\3\61\3\62\3\62\3\63\3\63\7\63\u013e"+
		"\n\63\f\63\16\63\u0141\13\63\3\63\3\63\3\64\3\64\3\65\3\65\3\65\3\65\3"+
		"\65\3\65\3\65\7\65\u014e\n\65\f\65\16\65\u0151\13\65\3\65\3\65\3\65\3"+
		"\66\3\66\3\66\3\66\3\67\3\67\38\38\78\u015e\n8\f8\168\u0161\138\39\69"+
		"\u0164\n9\r9\169\u0165\39\39\69\u016a\n9\r9\169\u016b\59\u016e\n9\3:\6"+
		":\u0171\n:\r:\16:\u0172\3:\3:\3;\3;\3;\3;\7;\u017b\n;\f;\16;\u017e\13"+
		";\3;\3;\3;\3;\3;\6\u009c\u013f\u014f\u017c<\4\3\1\6\4\1\b\5\1\n\6\2\f"+
		"\7\1\16\b\5\20\t\1\22\n\1\24\13\1\26\f\1\30\r\1\32\16\1\34\17\1\36\20"+
		"\1 \21\1\"\22\1$\23\1&\24\1(\25\1*\26\1,\27\1.\30\1\60\31\1\62\32\1\64"+
		"\33\1\66\34\18\35\1:\36\1<\37\1> \1@!\1B\"\1D#\1F$\1H%\1J&\1L\'\1N(\1"+
		"P)\3R*\4T+\1V,\1X-\1Z.\1\\/\1^\60\1`\61\1b\62\1d\63\1f\64\1h\65\1j\66"+
		"\1l\67\1n8\1p9\1r:\1t;\6v<\7\4\2\3\16\4))>>\4))@@\4))\61\61\5\13\f\17"+
		"\17\"\"\4C\\c|\6\62;C\\aac|\4\62^zz\4C\\c|\6\62;C\\aac|\3\62;\3\62;\5"+
		"\13\f\17\17\"\"\u0196\2\4\3\2\2\2\2\6\3\2\2\2\2\b\3\2\2\2\2\n\3\2\2\2"+
		"\2\f\3\2\2\2\2\16\3\2\2\2\2\20\3\2\2\2\2\22\3\2\2\2\2\24\3\2\2\2\2\26"+
		"\3\2\2\2\3\30\3\2\2\2\3\32\3\2\2\2\3\34\3\2\2\2\3\36\3\2\2\2\3 \3\2\2"+
		"\2\3\"\3\2\2\2\3$\3\2\2\2\3&\3\2\2\2\3(\3\2\2\2\3*\3\2\2\2\3,\3\2\2\2"+
		"\3.\3\2\2\2\3\60\3\2\2\2\3\62\3\2\2\2\3\64\3\2\2\2\3\66\3\2\2\2\38\3\2"+
		"\2\2\3:\3\2\2\2\3<\3\2\2\2\3>\3\2\2\2\3@\3\2\2\2\3B\3\2\2\2\3D\3\2\2\2"+
		"\3F\3\2\2\2\3H\3\2\2\2\3J\3\2\2\2\3L\3\2\2\2\3N\3\2\2\2\3P\3\2\2\2\3R"+
		"\3\2\2\2\3T\3\2\2\2\3V\3\2\2\2\3X\3\2\2\2\3Z\3\2\2\2\3\\\3\2\2\2\3^\3"+
		"\2\2\2\3`\3\2\2\2\3b\3\2\2\2\3d\3\2\2\2\3f\3\2\2\2\3h\3\2\2\2\3j\3\2\2"+
		"\2\3l\3\2\2\2\3n\3\2\2\2\3p\3\2\2\2\3r\3\2\2\2\3t\3\2\2\2\3v\3\2\2\2\4"+
		"x\3\2\2\2\6z\3\2\2\2\b|\3\2\2\2\n~\3\2\2\2\f\u0081\3\2\2\2\16\u0084\3"+
		"\2\2\2\20\u008a\3\2\2\2\22\u0092\3\2\2\2\24\u0096\3\2\2\2\26\u0098\3\2"+
		"\2\2\30\u00a1\3\2\2\2\32\u00a4\3\2\2\2\34\u00a9\3\2\2\2\36\u00ae\3\2\2"+
		"\2 \u00b2\3\2\2\2\"\u00b5\3\2\2\2$\u00bd\3\2\2\2&\u00ca\3\2\2\2(\u00cc"+
		"\3\2\2\2*\u00ce\3\2\2\2,\u00d1\3\2\2\2.\u00d7\3\2\2\2\60\u00da\3\2\2\2"+
		"\62\u00dd\3\2\2\2\64\u00e3\3\2\2\2\66\u00ea\3\2\2\28\u00ee\3\2\2\2:\u00f5"+
		"\3\2\2\2<\u00fb\3\2\2\2>\u0100\3\2\2\2@\u0106\3\2\2\2B\u010b\3\2\2\2D"+
		"\u0111\3\2\2\2F\u0113\3\2\2\2H\u0116\3\2\2\2J\u0118\3\2\2\2L\u011a\3\2"+
		"\2\2N\u011c\3\2\2\2P\u011e\3\2\2\2R\u0121\3\2\2\2T\u0124\3\2\2\2V\u0126"+
		"\3\2\2\2X\u0128\3\2\2\2Z\u012a\3\2\2\2\\\u012c\3\2\2\2^\u012e\3\2\2\2"+
		"`\u0132\3\2\2\2b\u0135\3\2\2\2d\u0139\3\2\2\2f\u013b\3\2\2\2h\u0144\3"+
		"\2\2\2j\u0146\3\2\2\2l\u0155\3\2\2\2n\u0159\3\2\2\2p\u015b\3\2\2\2r\u0163"+
		"\3\2\2\2t\u0170\3\2\2\2v\u0176\3\2\2\2xy\t\2\2\2y\5\3\2\2\2z{\t\3\2\2"+
		"{\7\3\2\2\2|}\t\4\2\2}\t\3\2\2\2~\177\7}\2\2\177\u0080\b\5\2\2\u0080\13"+
		"\3\2\2\2\u0081\u0082\7\177\2\2\u0082\r\3\2\2\2\u0083\u0085\t\5\2\2\u0084"+
		"\u0083\3\2\2\2\u0085\u0086\3\2\2\2\u0086\u0084\3\2\2\2\u0086\u0087\3\2"+
		"\2\2\u0087\u0088\3\2\2\2\u0088\u0089\b\7\5\2\u0089\17\3\2\2\2\u008a\u008e"+
		"\t\6\2\2\u008b\u008d\t\7\2\2\u008c\u008b\3\2\2\2\u008d\u0090\3\2\2\2\u008e"+
		"\u008c\3\2\2\2\u008e\u008f\3\2\2\2\u008f\21\3\2\2\2\u0090\u008e\3\2\2"+
		"\2\u0091\u0093\t\b\2\2\u0092\u0091\3\2\2\2\u0093\u0094\3\2\2\2\u0094\u0092"+
		"\3\2\2\2\u0094\u0095\3\2\2\2\u0095\23\3\2\2\2\u0096\u0097\7?\2\2\u0097"+
		"\25\3\2\2\2\u0098\u009c\7$\2\2\u0099\u009b\13\2\2\2\u009a\u0099\3\2\2"+
		"\2\u009b\u009e\3\2\2\2\u009c\u009d\3\2\2\2\u009c\u009a\3\2\2\2\u009d\u009f"+
		"\3\2\2\2\u009e\u009c\3\2\2\2\u009f\u00a0\7$\2\2\u00a0\27\3\2\2\2\u00a1"+
		"\u00a2\7k\2\2\u00a2\u00a3\7h\2\2\u00a3\31\3\2\2\2\u00a4\u00a5\7g\2\2\u00a5"+
		"\u00a6\7n\2\2\u00a6\u00a7\7u\2\2\u00a7\u00a8\7g\2\2\u00a8\33\3\2\2\2\u00a9"+
		"\u00aa\7v\2\2\u00aa\u00ab\7j\2\2\u00ab\u00ac\7g\2\2\u00ac\u00ad\7p\2\2"+
		"\u00ad\35\3\2\2\2\u00ae\u00af\7h\2\2\u00af\u00b0\7q\2\2\u00b0\u00b1\7"+
		"t\2\2\u00b1\37\3\2\2\2\u00b2\u00b3\7k\2\2\u00b3\u00b4\7p\2\2\u00b4!\3"+
		"\2\2\2\u00b5\u00b6\7f\2\2\u00b6\u00b7\7g\2\2\u00b7\u00b8\7e\2\2\u00b8"+
		"\u00b9\7n\2\2\u00b9\u00ba\7c\2\2\u00ba\u00bb\7t\2\2\u00bb\u00bc\7g\2\2"+
		"\u00bc#\3\2\2\2\u00bd\u00be\7h\2\2\u00be\u00bf\7w\2\2\u00bf\u00c0\7p\2"+
		"\2\u00c0\u00c1\7e\2\2\u00c1\u00c2\7v\2\2\u00c2\u00c3\7k\2\2\u00c3\u00c4"+
		"\7q\2\2\u00c4\u00c5\7p\2\2\u00c5%\3\2\2\2\u00c6\u00c7\7c\2\2\u00c7\u00cb"+
		"\7u\2\2\u00c8\u00c9\7C\2\2\u00c9\u00cb\7U\2\2\u00ca\u00c6\3\2\2\2\u00ca"+
		"\u00c8\3\2\2\2\u00cb\'\3\2\2\2\u00cc\u00cd\7\61\2\2\u00cd)\3\2\2\2\u00ce"+
		"\u00cf\7\61\2\2\u00cf\u00d0\7\61\2\2\u00d0+\3\2\2\2\u00d1\u00d2\7q\2\2"+
		"\u00d2\u00d3\7t\2\2\u00d3\u00d4\7f\2\2\u00d4\u00d5\7g\2\2\u00d5\u00d6"+
		"\7t\2\2\u00d6-\3\2\2\2\u00d7\u00d8\7d\2\2\u00d8\u00d9\7{\2\2\u00d9/\3"+
		"\2\2\2\u00da\u00db\7c\2\2\u00db\u00dc\7v\2\2\u00dc\61\3\2\2\2\u00dd\u00de"+
		"\7y\2\2\u00de\u00df\7j\2\2\u00df\u00e0\7g\2\2\u00e0\u00e1\7t\2\2\u00e1"+
		"\u00e2\7g\2\2\u00e2\63\3\2\2\2\u00e3\u00e4\7t\2\2\u00e4\u00e5\7g\2\2\u00e5"+
		"\u00e6\7v\2\2\u00e6\u00e7\7w\2\2\u00e7\u00e8\7t\2\2\u00e8\u00e9\7p\2\2"+
		"\u00e9\65\3\2\2\2\u00ea\u00eb\7n\2\2\u00eb\u00ec\7g\2\2\u00ec\u00ed\7"+
		"v\2\2\u00ed\67\3\2\2\2\u00ee\u00ef\7c\2\2\u00ef\u00f0\7p\2\2\u00f0\u00f1"+
		"\7f\2\2\u00f19\3\2\2\2\u00f2\u00f6\7@\2\2\u00f3\u00f4\7i\2\2\u00f4\u00f6"+
		"\7v\2\2\u00f5\u00f2\3\2\2\2\u00f5\u00f3\3\2\2\2\u00f6;\3\2\2\2\u00f7\u00f8"+
		"\7@\2\2\u00f8\u00fc\7?\2\2\u00f9\u00fa\7i\2\2\u00fa\u00fc\7g\2\2\u00fb"+
		"\u00f7\3\2\2\2\u00fb\u00f9\3\2\2\2\u00fc=\3\2\2\2\u00fd\u0101\7>\2\2\u00fe"+
		"\u00ff\7n\2\2\u00ff\u0101\7v\2\2\u0100\u00fd\3\2\2\2\u0100\u00fe\3\2\2"+
		"\2\u0101?\3\2\2\2\u0102\u0103\7>\2\2\u0103\u0107\7?\2\2\u0104\u0105\7"+
		"n\2\2\u0105\u0107\7g\2\2\u0106\u0102\3\2\2\2\u0106\u0104\3\2\2\2\u0107"+
		"A\3\2\2\2\u0108\u010c\7?\2\2\u0109\u010a\7g\2\2\u010a\u010c\7s\2\2\u010b"+
		"\u0108\3\2\2\2\u010b\u0109\3\2\2\2\u010cC\3\2\2\2\u010d\u010e\7#\2\2\u010e"+
		"\u0112\7?\2\2\u010f\u0110\7p\2\2\u0110\u0112\7g\2\2\u0111\u010d\3\2\2"+
		"\2\u0111\u010f\3\2\2\2\u0112E\3\2\2\2\u0113\u0114\7<\2\2\u0114\u0115\7"+
		"?\2\2\u0115G\3\2\2\2\u0116\u0117\7<\2\2\u0117I\3\2\2\2\u0118\u0119\7*"+
		"\2\2\u0119K\3\2\2\2\u011a\u011b\7+\2\2\u011bM\3\2\2\2\u011c\u011d\7B\2"+
		"\2\u011dO\3\2\2\2\u011e\u011f\7}\2\2\u011f\u0120\b(\3\2\u0120Q\3\2\2\2"+
		"\u0121\u0122\7\177\2\2\u0122\u0123\b)\4\2\u0123S\3\2\2\2\u0124\u0125\7"+
		".\2\2\u0125U\3\2\2\2\u0126\u0127\7A\2\2\u0127W\3\2\2\2\u0128\u0129\7-"+
		"\2\2\u0129Y\3\2\2\2\u012a\u012b\7/\2\2\u012b[\3\2\2\2\u012c\u012d\7,\2"+
		"\2\u012d]\3\2\2\2\u012e\u012f\7f\2\2\u012f\u0130\7k\2\2\u0130\u0131\7"+
		"x\2\2\u0131_\3\2\2\2\u0132\u0133\7q\2\2\u0133\u0134\7t\2\2\u0134a\3\2"+
		"\2\2\u0135\u0136\7o\2\2\u0136\u0137\7q\2\2\u0137\u0138\7f\2\2\u0138c\3"+
		"\2\2\2\u0139\u013a\7~\2\2\u013ae\3\2\2\2\u013b\u013f\7$\2\2\u013c\u013e"+
		"\13\2\2\2\u013d\u013c\3\2\2\2\u013e\u0141\3\2\2\2\u013f\u0140\3\2\2\2"+
		"\u013f\u013d\3\2\2\2\u0140\u0142\3\2\2\2\u0141\u013f\3\2\2\2\u0142\u0143"+
		"\7$\2\2\u0143g\3\2\2\2\u0144\u0145\7$\2\2\u0145i\3\2\2\2\u0146\u0147\5"+
		"l\66\2\u0147\u0148\7*\2\2\u0148\u0149\7$\2\2\u0149\u014a\3\2\2\2\u014a"+
		"\u014f\5p8\2\u014b\u014e\5p8\2\u014c\u014e\7\60\2\2\u014d\u014b\3\2\2"+
		"\2\u014d\u014c\3\2\2\2\u014e\u0151\3\2\2\2\u014f\u0150\3\2\2\2\u014f\u014d"+
		"\3\2\2\2\u0150\u0152\3\2\2\2\u0151\u014f\3\2\2\2\u0152\u0153\7$\2\2\u0153"+
		"\u0154\7+\2\2\u0154k\3\2\2\2\u0155\u0156\7f\2\2\u0156\u0157\7q\2\2\u0157"+
		"\u0158\7e\2\2\u0158m\3\2\2\2\u0159\u015a\7&\2\2\u015ao\3\2\2\2\u015b\u015f"+
		"\t\t\2\2\u015c\u015e\t\n\2\2\u015d\u015c\3\2\2\2\u015e\u0161\3\2\2\2\u015f"+
		"\u015d\3\2\2\2\u015f\u0160\3\2\2\2\u0160q\3\2\2\2\u0161\u015f\3\2\2\2"+
		"\u0162\u0164\t\13\2\2\u0163\u0162\3\2\2\2\u0164\u0165\3\2\2\2\u0165\u0163"+
		"\3\2\2\2\u0165\u0166\3\2\2\2\u0166\u016d\3\2\2\2\u0167\u0169\7\60\2\2"+
		"\u0168\u016a\t\f\2\2\u0169\u0168\3\2\2\2\u016a\u016b\3\2\2\2\u016b\u0169"+
		"\3\2\2\2\u016b\u016c\3\2\2\2\u016c\u016e\3\2\2\2\u016d\u0167\3\2\2\2\u016d"+
		"\u016e\3\2\2\2\u016es\3\2\2\2\u016f\u0171\t\r\2\2\u0170\u016f\3\2\2\2"+
		"\u0171\u0172\3\2\2\2\u0172\u0170\3\2\2\2\u0172\u0173\3\2\2\2\u0173\u0174"+
		"\3\2\2\2\u0174\u0175\b:\6\2\u0175u\3\2\2\2\u0176\u0177\7\61\2\2\u0177"+
		"\u0178\7,\2\2\u0178\u017c\3\2\2\2\u0179\u017b\13\2\2\2\u017a\u0179\3\2"+
		"\2\2\u017b\u017e\3\2\2\2\u017c\u017d\3\2\2\2\u017c\u017a\3\2\2\2\u017d"+
		"\u017f\3\2\2\2\u017e\u017c\3\2\2\2\u017f\u0180\7,\2\2\u0180\u0181\7\61"+
		"\2\2\u0181\u0182\3\2\2\2\u0182\u0183\b;\7\2\u0183w\3\2\2\2\30\2\3\u0086"+
		"\u008e\u0094\u009c\u00ca\u00f5\u00fb\u0100\u0106\u010b\u0111\u013f\u014d"+
		"\u014f\u015f\u0165\u016b\u016d\u0172\u017c";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
	}
}